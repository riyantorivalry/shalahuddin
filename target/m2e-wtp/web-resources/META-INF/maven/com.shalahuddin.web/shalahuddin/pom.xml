<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.shalahuddin.web</groupId>
	<artifactId>shalahuddin</artifactId>
	<packaging>war</packaging>
	<version>1.0</version>
	<name>Database Application</name>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java-version>1.8</java-version>
		<!-- Override Spring version -->
		<!-- spring.version>4.3.3.RELEASE</spring.version -->
		<!-- Thymeleaf 3 -->
		<org.thymeleaf-version>3.0.1.RELEASE</org.thymeleaf-version>
		<org.thymeleaf.extras.springsecurity4-version>3.0.0.RELEASE</org.thymeleaf.extras.springsecurity4-version>
		<nz.net.ultraq.thymeleaflayout-version>2.0.5</nz.net.ultraq.thymeleaflayout-version>
		<thymeleaf-extras-java8time-version>3.0.0.RELEASE</thymeleaf-extras-java8time-version>
		<!-- AssertJ is not a part of Spring IO platform, so the version must be 
			provided explicitly -->
		<assertj-core-version>3.5.2</assertj-core-version>
		<!-- plugins -->
		<surefire-plugin.version>2.10</surefire-plugin.version>
		<!-- default skip unit test is true -->
		<skipTests>true</skipTests>
		<!-- DATABASE properties -->
		<db.name>springmvc</db.name>
		<hbm2ddl>update</hbm2ddl>
		<hibernate.show_sql>true</hibernate.show_sql>
		<hibernate.format_sql>true</hibernate.format_sql>
		<hibernate.use_sql_comments>true</hibernate.use_sql_comments>
		<dataSource.jndiName></dataSource.jndiName>
	</properties>
	<!-- <parent> <groupId>io.spring.platform</groupId> <artifactId>platform-bom</artifactId> 
		<version>Athens-SR3</version> <relativePath/> </parent> -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.spring.platform</groupId>
				<artifactId>platform-bom</artifactId>
				<version>Athens-SR3</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
		</dependency>
		<!-- Security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-ldap</artifactId>
		</dependency>
		<!-- View -->
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf</artifactId>
			<version>${org.thymeleaf-version}</version>
			<!-- Avoid org.hibernate.jpa.boot.archive.spi.ArchiveException: Could 
				not build ClassFile in Java 8 -->
			<exclusions>
				<exclusion>
					<artifactId>javassist</artifactId>
					<groupId>org.javassist</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf-spring4</artifactId>
			<!-- TODO Remove once available in platform BOM -->
			<version>${org.thymeleaf-version}</version>
			<!-- Avoid org.hibernate.jpa.boot.archive.spi.ArchiveException: Could 
				not build ClassFile in Java 8 -->
			<exclusions>
				<exclusion>
					<artifactId>javassist</artifactId>
					<groupId>org.javassist</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity4</artifactId>
			<!-- TODO Remove version once available in platform BOM -->
			<version>${org.thymeleaf-version}</version>
			<!-- <version>${org.thymeleaf.extras.springsecurity4-version}</version> -->
		</dependency>
		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-java8time</artifactId>
			<version>${thymeleaf-extras-java8time-version}</version>
		</dependency>
		<!-- Persistence -->
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<!-- Avoid issue #72 Could not initialize class org.thymeleaf.templateresolver.ServletContextTemplateResolver 
				due to 'validation is not supported' -->
			<exclusions>
				<exclusion>
					<artifactId>pull-parser</artifactId>
					<groupId>pull-parser</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Adds support for Java 8 dates -->
		<!-- <dependency> -->
		<!-- <groupId>org.jadira.usertype</groupId> -->
		<!-- <artifactId>usertype.extended</artifactId> -->
		<!-- <version>3.2.0.GA</version> -->
		<!-- </dependency> -->
		<!-- Avoid: javax.validation.ValidationException: HV000183: Unable to load 
			'javax.el.ExpressionFactory' -->
		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>javax.el-api</artifactId>
			<scope>test</scope>
		</dependency>
		 <!--  <dependency> <groupId>org.hsqldb</groupId> <artifactId>hsqldb</artifactId> 
			</dependency> -->
		 <dependency> <groupId>org.postgresql</groupId> <artifactId>postgresql</artifactId> 
			<version>9.4.1207</version> </dependency> 
		<dependency>
			<groupId>${jdbc.groupId}</groupId>
			<artifactId>${jdbc.artifactId}</artifactId>
			<version>${jdbc.version}</version>
		</dependency>
		<!-- Spring Data -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-mongodb</artifactId>
		</dependency>
		<!-- Validation -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>
		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<!-- @Inject -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
		</dependency>
		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- JSON -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>
		<!-- Utilities -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
		</dependency>
		<!-- All Mail related stuff + Much more -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>
		<!-- JavaMail -->
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>javax.mail-api</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.7</version>
		</dependency>
		<!-- Reports -->
		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
		</dependency>
		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj-core-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.objenesis</groupId>
			<artifactId>objenesis</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<defaultGoal>install</defaultGoal>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<excludes>
					<exclude>logback.xml</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<includes>
					<include>logback.xml</include>
				</includes>
			</resource>
			<resource>
				<directory>${project.build.directory}/jasper</directory>
				<filtering>false</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<server>tomcat-development-server</server>
					<port>8383</port>
					<path>/${project.artifactId}</path>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>${java-version}</source>
					<target>${java-version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<warName>${project.artifactId}</warName>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<!-- <archive> <manifest> <addDefaultImplementationEntries>true</addDefaultImplementationEntries> 
						<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries> </manifest> 
						<manifestEntries> <Implementation-Build>${buildNumber}</Implementation-Build> 
						</manifestEntries> </archive> -->
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>deploy</id>
						<phase>deploy</phase>
						<goals>
							<goal>sources</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.10</version>
				<configuration>
					<skip>${skipTests}</skip>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<additionalProjectnatures>
						<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
					</additionalProjectnatures>
					<additionalBuildcommands>
						<buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
					</additionalBuildcommands>
					<downloadSources>false</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
					<wtpversion>1.5</wtpversion>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5</version>
			</plugin>
			<!-- <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>buildnumber-maven-plugin</artifactId> 
				<version>1.4</version> <executions> <execution> <phase>validate</phase> <goals> 
				<goal>create</goal> </goals> </execution> </executions> <configuration> <doCheck>false</doCheck> 
				<doUpdate>false</doUpdate> <format>{0,date,dd-MM-yyyy HH:mm:ss}</format> 
				<items> <item>timestamp</item> </items> </configuration> </plugin> -->
			<plugin>
				<groupId>com.alexnederlof</groupId>
				<artifactId>jasperreports-plugin</artifactId>
				<version>2.0</version>
				<executions>
					<execution>
						<phase>process-sources</phase>
						<goals>
							<goal>jasper</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- These are the default configurations: -->
					<compiler>net.sf.jasperreports.engine.design.JRJdtCompiler</compiler>
					<sourceDirectory>src/main/jasperreports</sourceDirectory>
					<outputDirectory>${project.build.directory}/jasper</outputDirectory>
					<outputFileExt>.jasper</outputFileExt>
					<xmlValidation>true</xmlValidation>
					<verbose>false</verbose>
					<numberOfThreads>4</numberOfThreads>
					<failOnMissingSourceDirectory>true</failOnMissingSourceDirectory>
					<sourceScanner>org.codehaus.plexus.compiler.util.scan.StaleSourceScanner</sourceScanner>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<!-- ================= Database Profiles ================= -->
		<profile>
			<id>oracle</id>
			<properties>
				<hibernate.dialect>org.hibernate.dialect.Oracle10gDialect</hibernate.dialect>
				<jdbc.groupId>com.oracle</jdbc.groupId>
				<jdbc.artifactId>ojdbc14</jdbc.artifactId>
				<jdbc.version>10.2.0.2.0</jdbc.version>
				<jdbc.driverClassName>oracle.jdbc.driver.OracleDriver</jdbc.driverClassName>
				<jdbc.url>jdbc:oracle:thin:@localhost:1521:ORCL</jdbc.url>
				<jdbc.username>springmvc</jdbc.username>
				<jdbc.password>password</jdbc.password>
			</properties>
		</profile>

		<profile>
			<id>mysql</id>
			<properties>
				<!-- According to the documentation at http://dev.mysql.com/doc/refman/5.5/en/create-table.html 
					TYPE was deprecated in MySQL 4.0. It was removed in MySQL 5.5 and one should 
					use ENGINGE=InnoDB instead. <hibernate.dialect>org.hibernate.dialect.MySQLInnoDBDialect</hibernate.dialect> -->
				<hibernate.dialect>org.hibernate.dialect.MySQL5InnoDBDialect</hibernate.dialect>
				<jdbc.groupId>mysql</jdbc.groupId>
				<jdbc.artifactId>mysql-connector-java</jdbc.artifactId>
				<jdbc.version>5.1.39</jdbc.version>
				<jdbc.driverClassName>com.mysql.jdbc.Driver</jdbc.driverClassName>
				<jdbc.url>jdbc:mysql://localhost/${db.name}?createDatabaseIfNotExist=true&amp;amp;useUnicode=true&amp;amp;characterEncoding=utf-8</jdbc.url>
				<jdbc.username>root</jdbc.username>
				<jdbc.password>password</jdbc.password>
			</properties>
		</profile>

		<profile>
			<id>derby</id>
			<properties>
				<hibernate.dialect>org.hibernate.dialect.DerbyDialect</hibernate.dialect>
				<jdbc.groupId>org.apache.derby</jdbc.groupId>
				<jdbc.artifactId>derbyclient</jdbc.artifactId>
				<jdbc.version>10.2.2.0</jdbc.version>
				<jdbc.driverClassName>org.apache.derby.jdbc.ClientDriver</jdbc.driverClassName>
				<jdbc.url>jdbc:derby://localhost/${db.name};create=true</jdbc.url>
				<jdbc.username>any</jdbc.username>
				<jdbc.password>value</jdbc.password>
			</properties>
		</profile>
		<profile>
			<id>h2</id>
			<properties>
				<dbunit.dataTypeFactoryName>org.dbunit.ext.h2.H2DataTypeFactory</dbunit.dataTypeFactoryName>
				<hibernate.dialect>org.hibernate.dialect.H2Dialect</hibernate.dialect>
				<jdbc.groupId>com.h2database</jdbc.groupId>
				<jdbc.artifactId>h2</jdbc.artifactId>
				<jdbc.version>1.2.134</jdbc.version>
				<jdbc.driverClassName>org.h2.Driver</jdbc.driverClassName>
				<jdbc.url>jdbc:h2:/tmp/${db.name};MVCC=TRUE</jdbc.url>
				<jdbc.username>sa</jdbc.username>
				<jdbc.password></jdbc.password>
			</properties>
		</profile>
		<profile>
			<!-- <activation> --> <!-- akan aktif kareka diset default -->
			<!-- <activeByDefault>true</activeByDefault> -->
			<!-- </activation> -->
			<id>hsqldb</id>
			<properties>
				<hibernate.dialect>org.hibernate.dialect.HSQLDialect</hibernate.dialect>
				<jdbc.groupId>org.hsqldb</jdbc.groupId>
				<jdbc.artifactId>hsqldb</jdbc.artifactId>
				<jdbc.version>2.3.4</jdbc.version>
				<jdbc.driverClassName>org.hsqldb.jdbcDriver</jdbc.driverClassName>
				<jdbc.url>jdbc:hsqldb:/tmp/${db.name};shutdown=true</jdbc.url>
				<jdbc.username>sa</jdbc.username>
				<jdbc.password></jdbc.password>
			</properties>
		</profile>

		<profile>
			<id>postgresql</id>
				<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<hibernate.dialect>org.hibernate.dialect.PostgreSQL9Dialect</hibernate.dialect>
				<jdbc.groupId>org.postgresql</jdbc.groupId>
				<jdbc.artifactId>postgresql</jdbc.artifactId>
				<jdbc.version>42.1.1.jre6</jdbc.version>
				<jdbc.driverClassName>org.postgresql.Driver</jdbc.driverClassName>
				<jdbc.url>jdbc:postgresql://localhost:5432/${db.name}</jdbc.url>
				<jdbc.username>postgres</jdbc.username>
				<jdbc.password>postgres</jdbc.password>
			</properties>
		</profile>

		<profile>
			<!-- You need to enable TCP/IP Connections for SQL Server 2005 after installing. -->
			<!-- http://www.mattwoodward.com/blog/index.cfm?commentID=211 -->
			<id>sqlserver</id>
			<properties>
				<hibernate.dialect>org.hibernate.dialect.SQLServerDialect</hibernate.dialect>
				<!-- <jdbc.groupId>net.sourceforge.jtds</jdbc.groupId> -->
				<!-- <jdbc.artifactId>jtds</jdbc.artifactId> -->
				<!-- <jdbc.version>1.3.1</jdbc.version> -->
				<!-- <jdbc.driverClassName>net.sourceforge.jtds.jdbc.Driver</jdbc.driverClassName> -->
				<!-- <jdbc.url>jdbc:jtds:sqlserver://localhost:1433/${db.name};instance=DBINSTANCE;user=sa;password=password</jdbc.url> -->
				<jdbc.groupId>com.microsoft.sqlserver</jdbc.groupId>
				<jdbc.artifactId>sqljdbc4</jdbc.artifactId>
				<jdbc.version>4.0</jdbc.version>
				<jdbc.driverClassName>com.microsoft.sqlserver.jdbc.SQLServerDriver</jdbc.driverClassName>
				<jdbc.url>jdbc:sqlserver://localhost:1433;databaseName=${db.name};instanceName=DBINSTANCE</jdbc.url>
				<jdbc.username>sa</jdbc.username>
				<jdbc.password>password</jdbc.password>
			</properties>
		</profile>
	</profiles>
</project>